container NetworkModel_EU 
{ 
	container MakeUnlinkedData
	{
		parameter<string> Junctions_fss         := 'Ready', ExplicitSuppliers = "SourceData/Infrastructure/TomTom/Generates/Junctions_fss ";
		parameter<string> Streets_fss           := 'Ready', ExplicitSuppliers = "SourceData/Infrastructure/TomTom/Generates/Streets_fss";
		parameter<string> Streets_fss_selection := 'Ready', ExplicitSuppliers = "SourceData/Infrastructure/TomTom/Generates/Streets_fss_selection";
		
		parameter<string> Create_InitialLinkSet := 'Ready', ExplicitSuppliers = "/NetworkSetup/Base_Analysis/NetwerkSpec/CreateInitialWorkingNetwork/LinkSet_Write";
		parameter<string> Create_FinalNodeSet   := 'Ready', ExplicitSuppliers = "/NetworkSetup/Base_Analysis/NetwerkSpec/CreateMoreEfficientNetwork/FinalNodeSet_Write";
		parameter<string> Create_FinalLinkSet   := 'Ready', ExplicitSuppliers = "/NetworkSetup/Base_Analysis/NetwerkSpec/CreateMoreEfficientNetwork/FinalLinkSet_Write";
		
	}	
	
	
	#include<ModelParameters.dms>
	#include<units.dms>
	#include<geometries.dms>
	#include<Classifications.dms>
	#include<SourceData.dms>
	#include<NetworkSetup.dms>
	#include<Analyses.dms>
	#include<Templates.dms>
	
	container ConfigSettings
	{
		container Overridable
		{
			parameter<String> NetworkModelDataDir        := '%SourceDataDir%/NetworkModel_EU';
		}
	}
	
	container ExportSettings
	{
		container MetaInfo
		{
			parameter<string> FileName : ='%storageBaseName%.xml';
			parameter<string> FileType : ='xml'; // default is 'ini' but ini files cannot be used well to store multi-line properties such as error messages of inproperly configured properties
			container Contents
			{
				container Software
				{
					parameter<string> GeoDmsVersion: [ '=string(GeoDmsVersion())' ];
				}
				container Config
				{
					parameter<string> FullName := '=PropValue(this, '+Quote('FullName')+')';
					parameter<string> Expr     := '=PropValue(this, '+Quote('Expr'    )+')';
				}
				container Environment
				{
					parameter<string> Processor    := expand(., '%env:PROCESSOR_IDENTIFIER%');
					parameter<string> User         := expand(., '%env:USERNAME%');
					parameter<string> ComputerName := expand(., '%env:COMPUTERNAME%');
				}
				container Parameters
				{
					parameter<string>   OrgGridsize                    := ModelParameters/OrgGridsize;
					parameter<string>   DestGridsize                   := ModelParameters/DestGridsize;
					parameter<string>   MaxTravelTime                  := string(ModelParameters/MaxTravelTime);
					parameter<string>   UseStreetTypeSubset            := string(ModelParameters/UseStreetTypeSubset);
					parameter<string>   Street_OD_ConnectabletSelectie := ModelParameters/Street_OD_ConnectabletSelectie;
					parameter<string>   StreetTypeSubsetSelectie       := ModelParameters/StreetTypeSubsetSelectie;
					parameter<string>   NumberOfItersForNetworkCleanUp := string(ModelParameters/NumberOfItersForNetworkCleanUp);
					parameter<string>   Use_Country_OD_selection       := string(ModelParameters/Use_Country_OD_selection);
					parameter<string>   Roads_path                     := ModelParameters/Roads_path;
					parameter<string>   CountryFolder                  := ModelParameters/CountryFolder;
					parameter<string>   MaxCarSpeed                    := string(ModelParameters/Advanced/MaxCarSpeed);
					parameter<string>   MaxCarSpeed_limit              := string(ModelParameters/Advanced/MaxCarSpeed_limit);
					parameter<string>   CarDefaultSpeed                := string(ModelParameters/Advanced/CarDefaultSpeed);
					parameter<string>   CarDefaultSpeed_low            := string(ModelParameters/Advanced/CarDefaultSpeed_low);
					parameter<string>   ConnectorLinkSpeed             := string(ModelParameters/Advanced/ConnectorLinkSpeed);
					parameter<string>   Ferry_Speed                    := string(ModelParameters/Advanced/Ferry_Speed);
				}
			}
		}
	}
}
